{"version":3,"file":"static/js/110.1b915dad.chunk.js","mappings":"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","sources":["components/ContactContainer/ContactForm/ContactForm.styled.jsx","components/ContactContainer/ContactForm/ContactForm.jsx","components/ContactContainer/ContactList/ContactList.styled.jsx","components/ContactContainer/Contact/Contact.styled.jsx","components/ContactContainer/Contact/Contact.jsx","components/ContactContainer/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","pages/UserPhoneBookPage/UserPhoneBookPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  padding: 20px;\n  gap: 12px;\n\n  flex-direction: column;\n  max-width: 320px;\n  align-items: center;\n  border: 1px solid #b7b7bf;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  width: 100%;\n  & span {\n    font-weight: 700;\n    display: block;\n    margin-bottom: 5px;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 5px;\n  width: 300px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n`;\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'src/redux/contacts/operations';\nimport { selectContacts } from 'src/redux/contacts/selectors';\nimport * as Yup from 'yup';\nimport { Button, Form, Input, Label } from './ContactForm.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst contactSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('Required')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  number: Yup.string()\n    .required('Required')\n    .matches(\n      /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n\nexport const ContactForm = ({ onAddContact }) => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const {\n    handleSubmit,\n    register,\n    reset,\n    formState: { errors, isValid },\n  } = useForm({\n    resolver: yupResolver(contactSchema),\n    defaultValues: initialValues,\n    mode: 'onBlur',\n  });\n\n  const checkContact = newName => {\n    if (!contacts) {\n      return;\n    }\n    return contacts.find(({ name }) => name === newName) ? true : false;\n  };\n\n  const onSubmit = data => {\n    if (checkContact(data.name)) {\n      alert(`${data.name} is already is in contacts`);\n      return;\n    }\n    dispatch(addContact(data));\n    onAddContact();\n    reset();\n  };\n\n  return (\n    <Form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n      <Label>\n        <span>Name</span>\n        <Input type=\"text\" placeholder=\"Name\" {...register('name')} />\n        <div style={{ height: 20, color: 'red', fontSize: 8 }}>\n          {errors.name && <span>{errors.name?.message || 'Error !'}</span>}\n        </div>\n      </Label>\n\n      <Label>\n        <span>Phone number</span>\n        <Input\n          type=\"tel\"\n          placeholder=\"+000 000 00 00\"\n          {...register('number')}\n        />\n        <div style={{ height: 20, color: 'red', fontSize: 8 }}>\n          {errors.number && <span>{errors.number?.message || 'Error !'}</span>}\n        </div>\n      </Label>\n\n      <Button type=\"submit\" disabled={!isValid}>\n        Add contact\n      </Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  border: 1px solid #b7b7bf;\n  padding: 0;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n  & span:last-of-type {\n    margin-left: 10px;\n  }\n  border-bottom: 1px solid #b7b7bf;\n  &:nth-of-type(odd) {\n    background-color: #b7b7bf;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item } from './Contact.styled';\nimport { useDispatch } from 'react-redux';\nimport { contactsActions } from 'src/redux';\n\nexport const Contact = ({ contact }) => {\n  const { _id: id, name, phone: number } = contact;\n\n  const dispatch = useDispatch();\n\n  const onDeleteContact = contactId => {\n    dispatch(contactsActions.deleteContact(contactId));\n  };\n\n  return (\n    <Item>\n      <div>\n        <span>{name}:</span> <span>{number}</span>\n      </div>\n      <button onClick={() => onDeleteContact(id)}>Delete</button>\n    </Item>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { List } from './ContactList.styled';\nimport { Contact } from 'src/components/ContactContainer/Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'src/redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const outputVisibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {outputVisibleContacts.length > 0 ? (\n        outputVisibleContacts.map(contact => (\n          <Contact key={contact._id} contact={contact} />\n        ))\n      ) : (\n        <div>No data</div>\n      )}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterTitle = styled.p`\n  font-style: italic;\n`;\n","import { Box } from 'src/components/commons/Box';\nimport { FilterTitle } from './Filter.styled';\nimport { Input } from 'src/components/ContactContainer/ContactForm/ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFiltersQuery } from 'src/redux/contacts/selectors';\nimport { setFiltersQuery } from 'src/redux/contacts/fitersSlice';\n\nexport const Filter = () => {\n  const query = useSelector(selectFiltersQuery);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(setFiltersQuery(e.target.value.toLowerCase().trim()));\n  };\n\n  return (\n    <Box>\n      <FilterTitle>Find contacts by name</FilterTitle>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={query}\n        onChange={handleChangeFilter}\n      />\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const OverlayStyled = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const ModalStyled = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n  background-color: #fff;\n  padding: 24px;\n  border-radius: 8px;\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { OverlayStyled, ModalStyled } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\nexport const Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const onCloseByEscape = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', onCloseByEscape);\n    return () => {\n      window.removeEventListener('keydown', onCloseByEscape);\n    };\n  }, [onClose]);\n\n  const onBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <OverlayStyled onClick={onBackdropClick}>\n      <ModalStyled>{children}</ModalStyled>\n    </OverlayStyled>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box } from 'src/components';\nimport { ContactForm } from 'src/components/ContactContainer/ContactForm/ContactForm';\nimport { ContactList } from 'src/components/ContactContainer/ContactList/ContactList';\nimport { Filter } from 'src/components/Filter/Filter';\nimport { selectError, selectIsLoading } from 'src/redux/contacts/selectors';\n\nimport { useState } from 'react';\nimport { Modal } from 'src/components/Modal/Modal';\nimport { contactsActions } from 'src/redux';\n\nexport default function UserPhoneBook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  useEffect(() => {\n    dispatch(contactsActions.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <button type=\"button\" onClick={toggleModal}>\n        Add contact\n      </button>\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <ContactForm onAddContact={toggleModal} />\n        </Modal>\n      )}\n      <Box as=\"h1\">Phonebook</Box>\n\n      <Filter />\n\n      {isLoading && <div>Loading...</div>}\n\n      {error && <div>Try again later...</div>}\n\n      <ContactList />\n    </>\n  );\n}\n"],"names":["Form","styled","form","_templateObject","_taggedTemplateLiteral","Label","label","_templateObject2","Input","input","_templateObject3","Button","button","_templateObject4","initialValues","name","number","contactSchema","Yup","shape","required","matches","ContactForm","_ref","_errors$name","_errors$number","onAddContact","contacts","useSelector","selectContacts","dispatch","useDispatch","_useForm","useForm","resolver","yupResolver","defaultValues","mode","handleSubmit","register","reset","_useForm$formState","formState","errors","isValid","_jsxs","autoComplete","onSubmit","data","newName","find","_ref2","checkContact","addContact","alert","concat","children","_jsx","_objectSpread","type","placeholder","style","height","color","fontSize","message","disabled","List","ul","Item","li","Contact","contact","id","_id","phone","onClick","contactId","contactsActions","deleteContact","ContactList","outputVisibleContacts","selectVisibleContacts","length","map","FilterTitle","p","Filter","query","selectFiltersQuery","Box","value","onChange","e","setFiltersQuery","target","toLowerCase","trim","OverlayStyled","div","ModalStyled","modalRoot","document","querySelector","Modal","onClose","useEffect","onCloseByEscape","code","window","addEventListener","removeEventListener","createPortal","currentTarget","UserPhoneBook","isLoading","selectIsLoading","error","selectError","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","toggleModal","fetchContacts","_Fragment","as"],"sourceRoot":""}