{"version":3,"file":"static/js/110.a7188415.chunk.js","mappings":"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","sources":["components/ContactContainer/ContactForm/ContactForm.styled.jsx","components/ContactContainer/ContactForm/ContactForm.jsx","components/ContactContainer/ContactList/ContactList.styled.jsx","components/ContactContainer/Contact/Contact.styled.jsx","components/ContactContainer/Contact/Contact.jsx","components/ContactContainer/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","pages/UserPhoneBookPage/UserPhoneBookPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  padding: 20px;\n  gap: 12px;\n\n  flex-direction: column;\n  max-width: 320px;\n  align-items: center;\n  border: 1px solid #b7b7bf;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  width: 100%;\n  & span {\n    font-weight: 700;\n    display: block;\n    margin-bottom: 5px;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 5px;\n  width: 300px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n`;\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContactForUpdate,\n  selectContacts,\n} from 'src/redux/contacts/selectors';\nimport * as Yup from 'yup';\nimport { Button, Form, Input, Label } from './ContactForm.styled';\nimport { contactsActions } from 'src/redux/contacts/contactsSlice';\nimport { useEffect } from 'react';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst contactSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('Required')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  number: Yup.string()\n    .required('Required')\n    .matches(\n      /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n\nexport const ContactForm = ({ toggleModal }) => {\n  const contacts = useSelector(selectContacts);\n  const contactForUpdate = useSelector(selectContactForUpdate);\n  const dispatch = useDispatch();\n\n  const {\n    handleSubmit,\n    register,\n    reset,\n    setValue,\n    formState: { errors, isValid },\n  } = useForm({\n    resolver: yupResolver(contactSchema),\n    defaultValues: initialValues,\n    mode: 'onBlur',\n  });\n\n  useEffect(() => {\n    if (contactForUpdate) {\n      setValue('name', contactForUpdate.name);\n      setValue('number', contactForUpdate.phone);\n    }\n  }, [contactForUpdate, setValue]);\n\n  const checkContact = newName => {\n    if (!contacts) {\n      return;\n    }\n    return contacts.find(({ name }) => name === newName) ? true : false;\n  };\n\n  const addContact = data => {\n    if (checkContact(data.name)) {\n      alert(`${data.name} is already is in contacts`);\n      return;\n    }\n    dispatch(contactsActions.addContact(data));\n    reset();\n    toggleModal();\n  };\n\n  const updateContact = data => {\n    const contact = { name: data.name, phone: data.number };\n    dispatch(\n      contactsActions.updateContact({ id: contactForUpdate._id, contact })\n    );\n    dispatch(contactsActions.setContactForUpdate(null));\n    reset();\n    toggleModal();\n  };\n\n  const cancel = () => {\n    if (contactForUpdate) {\n      dispatch(contactsActions.setContactForUpdate(null));\n    }\n    reset();\n    toggleModal();\n  };\n\n  return (\n    <Form\n      autoComplete=\"off\"\n      onSubmit={handleSubmit(contactForUpdate ? updateContact : addContact)}\n    >\n      <Label>\n        <span>Name</span>\n        <Input type=\"text\" placeholder=\"Name\" {...register('name')} />\n        <div style={{ height: 20, color: 'red', fontSize: 8 }}>\n          {errors.name && <span>{errors.name?.message || 'Error !'}</span>}\n        </div>\n      </Label>\n\n      <Label>\n        <span>Phone number</span>\n        <Input\n          type=\"tel\"\n          placeholder=\"+000 000 00 00\"\n          {...register('number')}\n        />\n        <div style={{ height: 20, color: 'red', fontSize: 8 }}>\n          {errors.number && <span>{errors.number?.message || 'Error !'}</span>}\n        </div>\n      </Label>\n\n      <Button type=\"button\" onClick={cancel}>\n        Cancel\n      </Button>\n\n      <Button type=\"submit\" disabled={!isValid}>\n        {contactForUpdate ? 'Save' : 'Add contact'}\n      </Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  border: 1px solid #b7b7bf;\n  padding: 0;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n  & span:last-of-type {\n    margin-left: 10px;\n  }\n  border-bottom: 1px solid #b7b7bf;\n  &:nth-of-type(odd) {\n    background-color: #b7b7bf;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item } from './Contact.styled';\nimport { useDispatch } from 'react-redux';\nimport { contactsActions } from 'src/redux';\n\nexport const Contact = ({ contact, toggleModal }) => {\n  const { _id: id, name, phone: number } = contact;\n\n  const dispatch = useDispatch();\n\n  const handleEdit = () => {\n    dispatch(contactsActions.setContactForUpdate(contact));\n    toggleModal();\n  };\n\n  const handleDelete = () => {\n    dispatch(contactsActions.deleteContact(id));\n  };\n\n  return (\n    <Item>\n      <div>\n        <span>{name}:</span> <span>{number}</span>\n      </div>\n      <div>\n        <button onClick={handleEdit}>Edit</button>\n        <button onClick={handleDelete}>Delete</button>\n      </div>\n    </Item>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { List } from './ContactList.styled';\nimport { Contact } from 'src/components/ContactContainer/Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'src/redux/contacts/selectors';\n\nexport const ContactList = ({ toggleModal }) => {\n  const outputVisibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {outputVisibleContacts.length > 0 ? (\n        outputVisibleContacts.map(contact => (\n          <Contact\n            key={contact._id}\n            contact={contact}\n            toggleModal={toggleModal}\n          />\n        ))\n      ) : (\n        <div>No data</div>\n      )}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterTitle = styled.p`\n  font-style: italic;\n`;\n","import { FilterTitle } from './Filter.styled';\nimport { Input } from 'src/components/ContactContainer/ContactForm/ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFiltersQuery } from 'src/redux/contacts/selectors';\nimport { setFiltersQuery } from 'src/redux/contacts/fitersSlice';\n\nexport const Filter = () => {\n  const query = useSelector(selectFiltersQuery);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(setFiltersQuery(e.target.value.toLowerCase().trim()));\n  };\n\n  return (\n    <div>\n      <FilterTitle>Find contacts by name</FilterTitle>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={query}\n        onChange={handleChangeFilter}\n      />\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const OverlayStyled = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const ModalStyled = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n  background-color: #fff;\n  padding: 24px;\n  border-radius: 8px;\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { OverlayStyled, ModalStyled } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\nexport const Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const onCloseByEscape = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', onCloseByEscape);\n    return () => {\n      window.removeEventListener('keydown', onCloseByEscape);\n    };\n  }, [onClose]);\n\n  const onBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <OverlayStyled onClick={onBackdropClick}>\n      <ModalStyled>{children}</ModalStyled>\n    </OverlayStyled>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'src/components/ContactContainer/ContactForm/ContactForm';\nimport { ContactList } from 'src/components/ContactContainer/ContactList/ContactList';\nimport { Filter } from 'src/components/Filter/Filter';\nimport { selectError, selectIsLoading } from 'src/redux/contacts/selectors';\n\nimport { useState } from 'react';\nimport { Modal } from 'src/components/Modal/Modal';\nimport { contactsActions } from 'src/redux';\nimport { Loader } from 'src/components/Loader/Loader';\n\nexport default function UserPhoneBook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  useEffect(() => {\n    dispatch(contactsActions.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <button type=\"button\" onClick={toggleModal}>\n        Add contact\n      </button>\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <ContactForm toggleModal={toggleModal} />\n        </Modal>\n      )}\n      <h1>Phonebook</h1>\n\n      <Filter />\n\n      {isLoading && <Loader />}\n\n      {error && <div>Try again later...</div>}\n\n      <ContactList toggleModal={toggleModal} />\n    </>\n  );\n}\n"],"names":["Form","styled","form","_templateObject","_taggedTemplateLiteral","Label","label","_templateObject2","Input","input","_templateObject3","Button","button","_templateObject4","initialValues","name","number","contactSchema","Yup","shape","required","matches","ContactForm","_ref","_errors$name","_errors$number","toggleModal","contacts","useSelector","selectContacts","contactForUpdate","selectContactForUpdate","dispatch","useDispatch","_useForm","useForm","resolver","yupResolver","defaultValues","mode","handleSubmit","register","reset","setValue","_useForm$formState","formState","errors","isValid","useEffect","phone","_jsxs","autoComplete","onSubmit","data","contact","contactsActions","updateContact","id","_id","setContactForUpdate","newName","find","_ref2","checkContact","addContact","alert","concat","children","_jsx","_objectSpread","type","placeholder","style","height","color","fontSize","message","onClick","disabled","List","ul","Item","li","Contact","deleteContact","ContactList","outputVisibleContacts","selectVisibleContacts","length","map","FilterTitle","p","Filter","query","selectFiltersQuery","value","onChange","e","setFiltersQuery","target","toLowerCase","trim","OverlayStyled","div","ModalStyled","modalRoot","document","querySelector","Modal","onClose","onCloseByEscape","code","window","addEventListener","removeEventListener","createPortal","currentTarget","UserPhoneBook","isLoading","selectIsLoading","error","selectError","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","fetchContacts","_Fragment","Loader"],"sourceRoot":""}