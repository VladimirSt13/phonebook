{"version":3,"file":"static/js/186.fc92b0f2.chunk.js","mappings":"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","sources":["components/AuthForms/AuthForms.styled.jsx","components/AuthForms/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  position: relative;\n  & span {\n    font-weight: 700;\n    display: block;\n    margin-bottom: 5px;\n  }\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n`;\n\nexport const Error = styled.p`\n  font-size: 14px;\n  font-style: italic;\n  color: red;\n  position: absolute;\n  right: 30px;\n  top: 50%;\n  padding: 0;\n  margin: 0;\n  line-height: 1;\n`;\n\nexport const VisibilityButton = styled.button`\n  position: absolute;\n  right: 0;\n  top: 39%;\n  background-color: transparent;\n  border: none;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  & svg {\n    width: 16px;\n    height: 16px;\n    color: gray;\n  }\n`;\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\n\nimport { Button, VisibilityButton } from './AuthForms.styled';\n\nimport { authActions } from 'src/redux/auth/slice';\n\nconst registerSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(70, 'Too Long!')\n    .required('Required'),\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().min(7, 'Password is too short').required('Required'),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    showPassword: false,\n  });\n\n  const {\n    handleSubmit,\n    register,\n    reset,\n    formState: { errors, isValid },\n  } = useForm({\n    resolver: yupResolver(registerSchema),\n    defaultValues: initialValues,\n    mode: 'onBlur',\n  });\n\n  const handleClickShowPassword = () => {\n    setState({\n      ...state,\n      showPassword: !state.showPassword,\n    });\n  };\n\n  const onSubmit = data => {\n    const preparedData = {\n      name: data.name.trim(),\n      email: data.email.trim(),\n      password: data.password.trim(),\n    };\n    dispatch(authActions.register(preparedData));\n    reset();\n  };\n\n  return (\n    <form\n      autoComplete=\"off\"\n      onSubmit={handleSubmit(onSubmit)}\n      style={{\n        padding: 20,\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth: '320px',\n        border: '1px solid #b7b7bf',\n      }}\n    >\n      <label>\n        Username\n        <input\n          type=\"text\"\n          {...register('name')}\n          aria-invalid={errors.name ? 'true' : 'false'}\n        />\n      </label>\n      <div style={{ height: 20, color: 'red' }}>\n        {errors.name && <span>{errors.name?.message || 'Error !'}</span>}\n      </div>\n\n      <label htmlFor=\"email\">\n        Email\n        <input\n          type=\"text\"\n          {...register('email')}\n          aria-invalid={errors.email ? 'true' : 'false'}\n        />\n      </label>\n      <div style={{ height: 20, color: 'red' }}>\n        {errors.email && <span>{errors.email?.message || 'Error !'}</span>}\n      </div>\n\n      <label htmlFor=\"password\" style={{ position: 'relative' }}>\n        Password\n        <input\n          type={state.showPassword ? 'text' : 'password'}\n          {...register('password')}\n        />\n        <VisibilityButton type=\"button\" onClick={handleClickShowPassword}>\n          {state.showPassword ? 'Show' : 'Hide'}\n        </VisibilityButton>\n      </label>\n      <div style={{ height: 20, color: 'red' }}>\n        {errors.password && (\n          <span>{errors.password?.message || 'Error !'}</span>\n        )}\n      </div>\n\n      <Button type=\"submit\" disabled={!isValid}>\n        Register\n      </Button>\n    </form>\n  );\n};\n","import { RegisterForm } from 'src/components/AuthForms/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <h1>Registration</h1>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["Button","styled","label","_templateObject","_taggedTemplateLiteral","button","_templateObject2","VisibilityButton","p","_templateObject3","_templateObject4","registerSchema","Yup","shape","name","min","max","required","email","password","initialValues","RegisterForm","_errors$name","_errors$email","_errors$password","dispatch","useDispatch","_useState","useState","showPassword","_useState2","_slicedToArray","state","setState","_useForm","useForm","resolver","yupResolver","defaultValues","mode","handleSubmit","register","reset","_useForm$formState","formState","errors","isValid","_jsxs","autoComplete","onSubmit","data","preparedData","trim","authActions","style","padding","display","flexDirection","maxWidth","border","children","_jsx","_objectSpread","type","height","color","message","htmlFor","position","onClick","disabled","Register"],"sourceRoot":""}