{"version":3,"file":"static/js/529.7525d117.chunk.js","mappings":"mTAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAkBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oJASzBC,EAAQJ,EAAAA,GAAOK,MAAKC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iMAapBI,GAAQP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAaS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+DAMrBO,EAASV,EAAAA,GAAOW,OAAMC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,gCAItBU,EAAQb,EAAAA,GAAOc,EAACC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,wKAYhBa,EAAmBhB,EAAAA,GAAOW,OAAMM,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,0S,2KChCvCe,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAAcC,EAAAA,KAAaC,MAAM,CACrCJ,MAAOG,EAAAA,KAAaH,MAAM,iBAAiBK,SAAS,YACpDJ,SAAUE,EAAAA,KAAaE,WAAWC,IAAI,EAAG,2BAG9BC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAA0BC,EAAAA,EAAAA,UAAS,CACjCC,cAAc,IACdC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAFKK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAqBtB,OACEI,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLnB,cAAeA,EACfoB,iBAAkBjB,EAClBkB,SAdiB,SAACC,EAAQC,GAC5Bd,GACEe,EAAAA,EAAAA,IAAM,CACJvB,MAAOqB,EAAOrB,MAAMwB,OACpBvB,SAAUoB,EAAOpB,SAASuB,UAG9BF,EAAQG,WACV,EAM2BC,UAEvBC,EAAAA,EAAAA,MAAC/C,EAAAA,GAAI,CAACgD,aAAa,MAAKF,SAAA,EACtBC,EAAAA,EAAAA,MAAC1C,EAAAA,GAAK,CAAC4C,QAAQ,QAAOH,SAAA,CAAC,SAErBT,EAAAA,EAAAA,KAAC7B,EAAAA,GAAK,CAAC0C,KAAK,QAAQC,KAAK,QAAQ1B,UAAQ,KACzCY,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CAACD,KAAK,QAAQE,UAAWvC,EAAAA,SAGxCiC,EAAAA,EAAAA,MAAC1C,EAAAA,GAAK,CAAC4C,QAAQ,WAAUH,SAAA,CAAC,YAExBT,EAAAA,EAAAA,KAAC7B,EAAAA,GAAK,CACJ0C,KAAMf,EAAMH,aAAe,OAAS,WACpCmB,KAAK,WACL1B,UAAQ,KAEVY,EAAAA,EAAAA,KAACe,EAAAA,GAAY,CAACD,KAAK,WAAWE,UAAWvC,EAAAA,MACzCuB,EAAAA,EAAAA,KAACpB,EAAAA,GAAgB,CAACiC,KAAK,SAASI,QAtCR,WAC9BlB,GAAQmB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLpB,GAAK,IACRH,cAAeG,EAAMH,eAEzB,EAiCyEc,SAC9DX,EAAMH,cAAeK,EAAAA,EAAAA,KAACmB,EAAAA,IAAY,KAAMnB,EAAAA,EAAAA,KAACoB,EAAAA,IAAe,UAG7DpB,EAAAA,EAAAA,KAAC1B,EAAAA,GAAM,CAACuC,KAAK,SAAQJ,SAAC,eAI9B,EC3Ee,SAASY,IACtB,OACEX,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACET,EAAAA,EAAAA,KAAA,MAAAS,SAAI,YACJT,EAAAA,EAAAA,KAACV,EAAS,MAGhB,C","sources":["components/AuthForms/AuthForms.styled.jsx","components/AuthForms/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormikForm, Field } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  max-width: 320px;\n  align-items: center;\n  border: 1px solid #b7b7bf;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  position: relative;\n  & span {\n    font-weight: 700;\n    display: block;\n    margin-bottom: 5px;\n  }\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  padding: 5px;\n  width: 300px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n`;\n\nexport const Error = styled.p`\n  font-size: 14px;\n  font-style: italic;\n  color: red;\n  position: absolute;\n  right: 30px;\n  top: 50%;\n  padding: 0;\n  margin: 0;\n  line-height: 1;\n`;\n\nexport const VisibilityButton = styled.button`\n  position: absolute;\n  right: 0;\n  top: 39%;\n  background-color: transparent;\n  border: none;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  & svg {\n    width: 16px;\n    height: 16px;\n    color: gray;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { MdVisibility, MdVisibilityOff } from 'react-icons/md';\nimport { ErrorMessage, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form,\n  Input,\n  Label,\n  Button,\n  Error,\n  VisibilityButton,\n} from './AuthForms.styled';\nimport { logIn } from 'redux/auth/operations';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().required().min(7, 'Password is too short'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState({\n    showPassword: false,\n  });\n\n  const handleClickShowPassword = () => {\n    setValue({\n      ...value,\n      showPassword: !value.showPassword,\n    });\n  };\n\n  const handleSubmit = (values, actions) => {\n    dispatch(\n      logIn({\n        email: values.email.trim(),\n        password: values.password.trim(),\n      })\n    );\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={loginSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <Label htmlFor=\"email\">\n          Email\n          <Input type=\"email\" name=\"email\" required />\n          <ErrorMessage name=\"email\" component={Error} />\n        </Label>\n\n        <Label htmlFor=\"password\">\n          Password\n          <Input\n            type={value.showPassword ? 'text' : 'password'}\n            name=\"password\"\n            required\n          />\n          <ErrorMessage name=\"password\" component={Error} />\n          <VisibilityButton type=\"button\" onClick={handleClickShowPassword}>\n            {value.showPassword ? <MdVisibility /> : <MdVisibilityOff />}\n          </VisibilityButton>\n        </Label>\n        <Button type=\"submit\">Log in</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import { LoginForm } from 'components/AuthForms/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <h1>Log in</h1>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","Label","label","_templateObject2","Input","Field","_templateObject3","Button","button","_templateObject4","Error","p","_templateObject5","VisibilityButton","_templateObject6","initialValues","email","password","loginSchema","Yup","shape","required","min","LoginForm","dispatch","useDispatch","_useState","useState","showPassword","_useState2","_slicedToArray","value","setValue","_jsx","Formik","validationSchema","onSubmit","values","actions","logIn","trim","resetForm","children","_jsxs","autoComplete","htmlFor","type","name","ErrorMessage","component","onClick","_objectSpread","MdVisibility","MdVisibilityOff","Login"],"sourceRoot":""}