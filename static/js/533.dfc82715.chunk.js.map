{"version":3,"file":"static/js/533.dfc82715.chunk.js","mappings":"8NAEaA,EAAOC,EAAAA,GAAAA,KAAH,kKASJC,EAAQD,EAAAA,GAAAA,MAAH,wLAYLE,EAAQF,EAAAA,GAAAA,MAAH,6EAMLG,EAASH,EAAAA,GAAAA,OAAH,8CC3BfI,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,CACd,EAqBM,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKE,SAAWD,EAAKC,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASF,EAAKE,OAETC,EAAI,EAAGA,EAAID,EAAQC,IAC1B,IAAKT,EAAcM,EAAKG,GAAIF,EAAKE,IAC/B,OAAO,EAIX,OAAO,CACR,CACF,CAYkBC,CAAyBV,GACtCW,EAAoB,IAAZR,EA/Gd,SAA8BS,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAMG,MAGRxB,CACR,EACDyB,IAAK,SAAaF,EAAKC,GACrBH,EAAQ,CACNE,IAAKA,EACLC,MAAOA,EAEV,EACDE,WAAY,WACV,OAAOL,EAAQ,CAACA,GAAS,EAC1B,EACDM,MAAO,WACLN,OAAQO,CACT,EAEJ,CAwF6BC,CAAqBhB,GAtFnD,SAAwBF,EAASS,GAC/B,IAAIU,EAAU,GAEd,SAASR,EAAIC,GACX,IAAIQ,EAAaD,EAAQE,WAAU,SAAUX,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,IAC1B,IAED,GAAIQ,GAAc,EAAG,CACnB,IAAIV,EAAQS,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQb,IAGXA,EAAMG,KACd,CAGD,OAAOxB,CACR,CAwBD,MAAO,CACLsB,IAAKA,EACLG,IAxBF,SAAaF,EAAKC,GACZF,EAAIC,KAASvB,IAEf8B,EAAQI,QAAQ,CACdX,IAAKA,EACLC,MAAOA,IAGLM,EAAQd,OAASL,GACnBmB,EAAQK,MAGb,EAaCT,WAXF,WACE,OAAOI,CACR,EAUCH,MARF,WACEG,EAAU,EACX,EAQF,CAmCgEM,CAAezB,EAASE,GAEvF,SAASwB,IACP,IAAIb,EAAQL,EAAMG,IAAIgB,WAEtB,GAAId,IAAUxB,EAAW,CAIvB,GAFAwB,EAAQnB,EAAKkC,MAAM,KAAMD,WAErB1B,EAAqB,CACvB,IAAIkB,EAAUX,EAAMO,aAChBc,EAAgBV,EAAQW,MAAK,SAAUpB,GACzC,OAAOT,EAAoBS,EAAMG,MAAOA,EACzC,IAEGgB,IACFhB,EAAQgB,EAAchB,MAEzB,CAEDL,EAAMM,IAAIa,UAAWd,EACtB,CAED,OAAOA,CACR,CAMD,OAJAa,EAASK,WAAa,WACpB,OAAOvB,EAAMQ,OACd,EAEMU,CACR,CC/ID,SAASM,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CACf,IAAG,CACF,IAAIC,EAAkBL,EAAaM,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAIG,MAAQ,WAAa,YAAcH,CAC1F,IAAEI,KAAK,MACR,MAAM,IAAIC,MAAM,kGAAoGJ,EAAkB,IACvI,CAED,OAAOL,CACR,CAEM,SAASU,EAAsBC,GACpC,IAAK,IAAIC,EAAOnB,UAAUtB,OAAQ0C,EAAyB,IAAIZ,MAAMW,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAKrB,UAAUqB,GAG/C,IAAIC,EAAiB,WACnB,IAAK,IAAIC,EAAQvB,UAAUtB,OAAQ4B,EAAQ,IAAIE,MAAMe,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFlB,EAAMkB,GAASxB,UAAUwB,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBtC,GAGduC,EAAavB,EAAMT,MAQvB,GAN0B,kBAAfgC,IACTF,EAAwBE,EAExBA,EAAavB,EAAMT,OAGK,oBAAfgC,EACT,MAAM,IAAIb,MAAM,qFAAuFa,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBxB,MAAMC,QAAQmB,GAAkBA,EAAiB,CAACA,GACxErB,EAAeF,EAAgBC,GAC/B2B,EAAqBf,EAAQjB,WAAM,EAAQ,CAAC,WAG9C,OAFAyB,IAEOG,EAAW5B,MAAM,KAAMD,UAC/B,GAAEkC,OAAOF,IAENG,EAAWjB,GAAQ,WAIrB,IAHA,IAAIkB,EAAS,GACT1D,EAAS6B,EAAa7B,OAEjBC,EAAI,EAAGA,EAAID,EAAQC,IAG1ByD,EAAOC,KAAK9B,EAAa5B,GAAGsB,MAAM,KAAMD,YAK1C,OADAyB,EAAcQ,EAAmBhC,MAAM,KAAMmC,EAE9C,IAeD,OAdAE,OAAOC,OAAOJ,EAAU,CACtBN,WAAYA,EACZI,mBAAoBA,EACpB1B,aAAcA,EACdiC,WAAY,WACV,OAAOf,CACR,EACDgB,eAAgB,WACd,OAAOf,CACR,EACDgB,oBAAqB,WACnB,OAAOhB,EAAkB,CAC1B,IAEIS,CACR,EAGD,OAAOb,CACR,CACM,I,UAAIA,EAAgCL,EAAsBnD,GCrGpD6E,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EACnBC,EAAqB,SAAAP,GAAK,OAAIA,EAAMQ,QAAQC,KAAlB,EAE1BC,EAAwBhC,EACnC,CAACqB,EAAgBQ,IACjB,SAACN,EAAUU,GAKT,OAJuBV,EAASW,QAAO,qBAAG1C,KACnC2C,cAAcC,SAASH,EADS,GAKxC,I,mBCRUI,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC5B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAO/C,EAAP,KAAagD,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOE,EAAP,KAAeC,EAAf,KAEMnB,GAAWoB,EAAAA,EAAAA,IAAYtB,GACvBuB,GAAWC,EAAAA,EAAAA,MAcXC,EAAe,SAAAC,GACnB,OAAQA,EAAEC,OAAOxD,MACf,IAAK,OACHgD,EAAQO,EAAEC,OAAOpF,OACjB,MAEF,IAAK,SACH8E,EAAUK,EAAEC,OAAOpF,OAMxB,EAkBD,OACE,SAACqF,EAAA,EAAD,CAAKC,GAAG,QAAQC,EAAG,EAAGC,aAAa,SAAnC,UACE,UAACrH,EAAD,CAAMsH,aAAa,MAAMC,SAlBR,SAAAP,GACnBA,EAAEQ,iBAEF,IAAM/D,EAAOuD,EAAES,cAAchE,KAAK5B,MAC5B6E,EAASM,EAAES,cAAcf,OAAO7E,OA1BnB,SAAA6F,GACnB,GAAKlC,EAGL,QAAOA,EAAS1C,MAAK,qBAAGW,OAAoBiE,CAAvB,GACtB,CAuBKC,CAAalE,IAKjBoD,GAASe,EAAAA,EAAAA,IAAW,CAAEnE,KAAAA,EAAMiD,OAAAA,KAC5BH,IAtCAE,EAAQ,IACRE,EAAU,KAgCRkB,MAAM,GAAD,OAAIpE,EAAJ,8BAOR,EAIG,WACE,UAACvD,EAAD,CAAO4H,QAAQ,OAAf,WACE,oCACA,SAAC3H,EAAD,CACE4H,KAAK,OACLtE,KAAK,OACLuE,YAAY,OACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRtG,MAAO4B,EACP2E,SAAUrB,QAId,UAAC7G,EAAD,CAAO4H,QAAQ,SAAf,WACE,sCACA,SAAC3H,EAAD,CACE4H,KAAK,MACLtE,KAAK,SACLuE,YAAY,aACZC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRtG,MAAO6E,EACP0B,SAAUrB,QAId,SAAC3G,EAAD,CAAQ2H,KAAK,SAAb,6BAIP,EC1FYM,EAAcpI,EAAAA,GAAAA,EAAH,+C,UCKXqI,EAAS,WACpB,IAAMtC,GAAQY,EAAAA,EAAAA,IAAYd,GACpBe,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAACI,EAAA,EAAD,YACE,SAACmB,EAAD,qCACA,SAAClI,EAAD,CACE4H,KAAK,OACLtE,KAAK,SACL5B,MAAOmE,EACPoC,SAXqB,SAAApB,GACzBH,GAAS0B,EAAAA,EAAAA,GAAgBvB,EAAEC,OAAOpF,MAAMuE,cAAcoC,QACvD,MAaF,ECxBYC,EAAOxI,EAAAA,GAAAA,GAAH,0FCAJyI,EAAOzI,EAAAA,GAAAA,GAAH,uPCGJ0I,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACXC,EAA4BD,EAAjCE,IAASrF,EAAwBmF,EAAxBnF,KAAaiD,EAAWkC,EAAlBG,MACjBlC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAAC4B,EAAD,YACE,4BACE,4BAAOjF,EAAP,OADF,KACuB,0BAAOiD,QAE9B,mBAAQsC,QAAS,kBATGC,EASmBJ,OARzChC,GAASqC,EAAAA,EAAAA,IAAcD,IADD,IAAAA,CASH,EAAjB,sBAGL,ECbYE,EAAc,WACzB,IAAMC,GAAwBxC,EAAAA,EAAAA,IAAYX,GAC1CoD,QAAQC,IACN,gEACAF,GAGF,IAAMG,GAAiB3C,EAAAA,EAAAA,IAAYtB,GAMnC,OALA+D,QAAQC,IACN,yDACAC,IAIA,SAACd,EAAD,UACGW,EAAsB/H,OAAS,EAC9B+H,EAAsB5F,KAAI,SAAAoF,GAAO,OAC/B,SAACD,EAAD,CAA2BC,QAASA,GAAtBA,EAAQE,IADS,KAIjC,sCAIP,E,UC9BYU,EAAgBvJ,EAAAA,GAAAA,IAAH,qNAYbwJ,EAAcxJ,EAAAA,GAAAA,IAAH,6FCTlByJ,EAAYC,SAASC,cAAc,eAC5BC,EAAQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,UAC/BC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,SAAAjD,GACP,WAAXA,EAAEkD,MACJJ,GAEH,EAED,OADAK,OAAOC,iBAAiB,UAAWH,GAC5B,WACLE,OAAOE,oBAAoB,UAAWJ,EACvC,CACF,GAAE,CAACH,IAQJ,OAAOQ,EAAAA,EAAAA,eACL,SAACd,EAAD,CAAeR,QAPO,SAAAhC,GAClBA,EAAES,gBAAkBT,EAAEC,QACxB6C,GAEH,EAGC,UACE,SAACL,EAAD,UAAcM,MAEhBL,EAEH,EClBc,SAASa,IACtB,IAAM1D,GAAWC,EAAAA,EAAAA,MACXnB,GAAYiB,EAAAA,EAAAA,IAAYlB,GACxBG,GAAQe,EAAAA,EAAAA,IAAYhB,GAE1B,GAAkCY,EAAAA,EAAAA,WAAS,GAA3C,eAAOgE,EAAP,KAAkBC,EAAlB,KAEMC,EAAc,WAClBD,GAAcD,EACf,EAMD,OAJAR,EAAAA,EAAAA,YAAU,WACRnD,GAAS8D,EAAAA,EAAAA,MACV,GAAE,CAAC9D,KAGF,iCACE,mBAAQkB,KAAK,SAASiB,QAAS0B,EAA/B,yBAGCF,IACC,SAACX,EAAD,CAAOC,QAASY,EAAhB,UACE,SAACxD,EAAA,EAAD,CAAKC,GAAI,SAAAC,GAAC,OAAIA,EAAEwD,MAAMC,OAAOC,UAAnB,EAAV,UACE,SAACxE,EAAD,CAAaC,aAAcmE,SAIjC,SAACxD,EAAA,EAAD,CAAK6D,GAAG,KAAR,wBACA,SAACzC,EAAD,IACC3C,IAAa,wCACbE,IAAS,iDACV,SAACsD,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.styled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","pages/UserPhoneBook/UserPhoneBook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  padding: 20px;\n  flex-direction: column;\n  max-width: 320px;\n  align-items: center;\n  border: 1px solid #b7b7bf;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  & span {\n    font-weight: 700;\n    display: block;\n    margin-bottom: 5px;\n  }\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 5px;\n  width: 300px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFiltersQuery = state => state.filters.query;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFiltersQuery],\n  (contacts, contactsFilter) => {\n    const outputContacts = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(contactsFilter)\n    );\n\n    return outputContacts;\n  }\n);\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Box } from 'components/Commons/Box';\n\nexport const ContactForm = ({ onAddContact }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const checkContact = newName => {\n    if (!contacts) {\n      return;\n    }\n    return contacts.find(({ name }) => name === newName) ? true : false;\n  };\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n\n      case 'number':\n        setNumber(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n\n    const name = e.currentTarget.name.value;\n    const number = e.currentTarget.number.value;\n\n    if (checkContact(name)) {\n      alert(`${name} is already is in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    onAddContact();\n    reset();\n  };\n\n  return (\n    <Box bg=\"white\" p={4} borderRadius=\"normal\">\n      <Form autoComplete=\"off\" onSubmit={onSubmitForm}>\n        <Label htmlFor=\"name\">\n          <span>Name</span>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </Label>\n\n        <Label htmlFor=\"number\">\n          <span>Number</span>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Tel number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </Label>\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterTitle = styled.p`\n  font-style: italic;\n`;\n","import { Box } from 'components/Commons/Box';\nimport { FilterTitle } from './Filter.styled';\nimport { Input } from 'components/ContactForm/ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFiltersQuery } from 'redux/contacts/selectors';\nimport { setFiltersQuery } from 'redux/contacts/fitersSlice';\n\nexport const Filter = () => {\n  const query = useSelector(selectFiltersQuery);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(setFiltersQuery(e.target.value.toLowerCase().trim()));\n  };\n\n  return (\n    <Box>\n      <FilterTitle>Find contacts by name</FilterTitle>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={query}\n        onChange={handleChangeFilter}\n      />\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  border: 1px solid #b7b7bf;\n  padding: 0;\n`;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n  & span:last-of-type {\n    margin-left: 10px;\n  }\n  border-bottom: 1px solid #b7b7bf;\n  &:nth-of-type(odd) {\n    background-color: #b7b7bf;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Item } from './Contact.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const Contact = ({ contact }) => {\n  const { _id: id, name, phone: number } = contact;\n  const dispatch = useDispatch();\n\n  const onDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <Item>\n      <div>\n        <span>{name}:</span> <span>{number}</span>\n      </div>\n      <button onClick={() => onDeleteContact(id)}>Delete</button>\n    </Item>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    _id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { List } from './ContactList.styled';\nimport { Contact } from 'components/Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport {\n  selectVisibleContacts,\n  selectContacts,\n} from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const outputVisibleContacts = useSelector(selectVisibleContacts);\n  console.log(\n    'file: ContactList.jsx:11  ContactList  outputVisibleContacts:',\n    outputVisibleContacts\n  );\n\n  const outputContacts = useSelector(selectContacts);\n  console.log(\n    'file: ContactList.jsx:12  ContactList  outputContacts:',\n    outputContacts\n  );\n\n  return (\n    <List>\n      {outputVisibleContacts.length > 0 ? (\n        outputVisibleContacts.map(contact => (\n          <Contact key={contact._id} contact={contact} />\n        ))\n      ) : (\n        <div>No data</div>\n      )}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const OverlayStyled = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const ModalStyled = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { OverlayStyled, ModalStyled } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\nexport const Modal = ({ onClose, children }) => {\n  useEffect(() => {\n    const onCloseByEscape = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', onCloseByEscape);\n    return () => {\n      window.removeEventListener('keydown', onCloseByEscape);\n    };\n  }, [onClose]);\n\n  const onBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <OverlayStyled onClick={onBackdropClick}>\n      <ModalStyled>{children}</ModalStyled>\n    </OverlayStyled>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { Box } from 'components/Commons/Box';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { useState } from 'react';\nimport { Modal } from 'components/Modal/Modal';\n\nexport default function UserPhoneBook() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <button type=\"button\" onClick={toggleModal}>\n        Add contact\n      </button>\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <Box bg={p => p.theme.colors.background}>\n            <ContactForm onAddContact={toggleModal} />\n          </Box>\n        </Modal>\n      )}\n      <Box as=\"h1\">Phonebook</Box>\n      <Filter />\n      {isLoading && <div>Loading...</div>}\n      {error && <div>Try again later...</div>}\n      <ContactList />\n    </>\n  );\n}\n"],"names":["Form","styled","Label","Input","Button","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFiltersQuery","filters","query","selectVisibleContacts","contactsFilter","filter","toLowerCase","includes","ContactForm","onAddContact","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","Box","bg","p","borderRadius","autoComplete","onSubmit","preventDefault","currentTarget","newName","checkContact","addContact","alert","htmlFor","type","placeholder","pattern","title","required","onChange","FilterTitle","Filter","setFiltersQuery","trim","List","Item","Contact","contact","id","_id","phone","onClick","contactId","deleteContact","ContactList","outputVisibleContacts","console","log","outputContacts","OverlayStyled","ModalStyled","modalRoot","document","querySelector","Modal","onClose","children","useEffect","onCloseByEscape","code","window","addEventListener","removeEventListener","createPortal","UserPhoneBook","showModal","setShowModal","toggleModal","fetchContacts","theme","colors","background","as"],"sourceRoot":""}