{"version":3,"file":"static/js/541.2c1e20e6.chunk.js","mappings":"mTAGaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,kKASJE,EAAQF,EAAAA,GAAAA,MAAH,+MAaLG,GAAQH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,6EAMLK,EAASL,EAAAA,GAAAA,OAAH,8CAINM,EAAQN,EAAAA,GAAAA,EAAH,sLAYLO,EAAmBP,EAAAA,GAAAA,OAAH,wT,0KChCvBQ,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAAcC,EAAAA,KAAaC,MAAM,CACrCJ,MAAOG,EAAAA,KAAaH,MAAM,iBAAiBK,SAAS,YACpDJ,SAAUE,EAAAA,KAAaE,WAAWC,IAAI,EAAG,2BAG9BC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,CACjCC,cAAc,IADhB,eAAOC,EAAP,KAAcC,EAAd,KAqBA,OACE,SAAC,KAAD,CACEd,cAAeA,EACfe,iBAAkBZ,EAClBa,SAdiB,SAACC,EAAQC,GAC5BT,GACEU,EAAAA,EAAAA,IAAM,CACJlB,MAAOgB,EAAOhB,MAAMmB,OACpBlB,SAAUe,EAAOf,SAASkB,UAG9BF,EAAQG,WACT,EAGC,UAKE,UAAC,KAAD,CAAMC,aAAa,MAAnB,WACE,UAAC,KAAD,CAAOC,QAAQ,QAAf,mBAEE,SAAC,KAAD,CAAOC,KAAK,QAAQC,KAAK,QAAQnB,UAAQ,KACzC,SAAC,KAAD,CAAcmB,KAAK,QAAQC,UAAW5B,EAAAA,SAGxC,UAAC,KAAD,CAAOyB,QAAQ,WAAf,sBAEE,SAAC,KAAD,CACEC,KAAMX,EAAMD,aAAe,OAAS,WACpCa,KAAK,WACLnB,UAAQ,KAEV,SAAC,KAAD,CAAcmB,KAAK,WAAWC,UAAW5B,EAAAA,MACzC,SAAC,KAAD,CAAkB0B,KAAK,SAASG,QAtCR,WAC9Bb,GAAS,kBACJD,GADG,IAEND,cAAeC,EAAMD,eAExB,EAiCO,SACGC,EAAMD,cAAe,SAAC,MAAD,KAAmB,SAAC,MAAD,UAG7C,SAAC,KAAD,CAAQY,KAAK,SAAb,wBAIP,EC3Ec,SAASI,IACtB,OACE,4BACE,oCACA,SAACpB,EAAD,MAGL,C","sources":["components/AuthForms/AuthForms.styled.jsx","components/AuthForms/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormikForm, Field } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  max-width: 320px;\n  align-items: center;\n  border: 1px solid #b7b7bf;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  position: relative;\n  & span {\n    font-weight: 700;\n    display: block;\n    margin-bottom: 5px;\n  }\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  padding: 5px;\n  width: 300px;\n`;\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n`;\n\nexport const Error = styled.p`\n  font-size: 14px;\n  font-style: italic;\n  color: red;\n  position: absolute;\n  right: 30px;\n  top: 50%;\n  padding: 0;\n  margin: 0;\n  line-height: 1;\n`;\n\nexport const VisibilityButton = styled.button`\n  position: absolute;\n  right: 0;\n  top: 39%;\n  background-color: transparent;\n  border: none;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n  & svg {\n    width: 16px;\n    height: 16px;\n    color: gray;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { MdVisibility, MdVisibilityOff } from 'react-icons/md';\nimport { ErrorMessage, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Form,\n  Input,\n  Label,\n  Button,\n  Error,\n  VisibilityButton,\n} from './AuthForms.styled';\nimport { logIn } from 'redux/auth/operations';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst loginSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().required().min(7, 'Password is too short'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState({\n    showPassword: false,\n  });\n\n  const handleClickShowPassword = () => {\n    setValue({\n      ...value,\n      showPassword: !value.showPassword,\n    });\n  };\n\n  const handleSubmit = (values, actions) => {\n    dispatch(\n      logIn({\n        email: values.email.trim(),\n        password: values.password.trim(),\n      })\n    );\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={loginSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <Label htmlFor=\"email\">\n          Email\n          <Input type=\"email\" name=\"email\" required />\n          <ErrorMessage name=\"email\" component={Error} />\n        </Label>\n\n        <Label htmlFor=\"password\">\n          Password\n          <Input\n            type={value.showPassword ? 'text' : 'password'}\n            name=\"password\"\n            required\n          />\n          <ErrorMessage name=\"password\" component={Error} />\n          <VisibilityButton type=\"button\" onClick={handleClickShowPassword}>\n            {value.showPassword ? <MdVisibility /> : <MdVisibilityOff />}\n          </VisibilityButton>\n        </Label>\n        <Button type=\"submit\">Log in</Button>\n      </Form>\n    </Formik>\n  );\n};\n","import { LoginForm } from 'components/AuthForms/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <h1>Log in</h1>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["Form","styled","FormikForm","Label","Input","Field","Button","Error","VisibilityButton","initialValues","email","password","loginSchema","Yup","shape","required","min","LoginForm","dispatch","useDispatch","useState","showPassword","value","setValue","validationSchema","onSubmit","values","actions","logIn","trim","resetForm","autoComplete","htmlFor","type","name","component","onClick","Login"],"sourceRoot":""}